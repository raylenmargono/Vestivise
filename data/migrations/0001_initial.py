# -*- coding: utf-8 -*-
# Generated by Django 1.11a1 on 2017-06-07 19:43
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brokerage_name', models.CharField(blank=True, max_length=100, null=True)),
                ('nickname', models.CharField(blank=True, max_length=100, null=True)),
                ('quovo_id', models.IntegerField(unique=True)),
                ('active', models.BooleanField(default=True)),
                ('quovo_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_accounts', to='dashboard.QuovoUser')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='AccountReturns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('year_to_date', models.FloatField()),
                ('one_year_return', models.FloatField()),
                ('two_year_return', models.FloatField()),
                ('three_year_return', models.FloatField()),
                ('one_month_return', models.FloatField()),
                ('three_month_return', models.FloatField()),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account_returns', to='data.Account')),
            ],
            options={
                'verbose_name': 'AccountReturn',
                'verbose_name_plural': 'AccountReturns',
            },
        ),
        migrations.CreateModel(
            name='AverageUserBondEquity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('age_group', models.PositiveSmallIntegerField()),
                ('bond', models.FloatField()),
                ('equity', models.FloatField()),
            ],
            options={
                'verbose_name': 'AverageUserBondEquity',
                'verbose_name_plural': 'AverageUserBondEquities',
            },
        ),
        migrations.CreateModel(
            name='AverageUserFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('average_fees', models.FloatField()),
            ],
            options={
                'verbose_name': 'AverageUserFees',
                'verbose_name_plural': 'AverageUserFees',
            },
        ),
        migrations.CreateModel(
            name='AverageUserReturns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('age_group', models.PositiveSmallIntegerField()),
                ('year_to_date', models.FloatField()),
                ('one_year_return', models.FloatField()),
                ('two_year_return', models.FloatField()),
                ('three_year_return', models.FloatField()),
                ('one_month_return', models.FloatField()),
                ('three_month_return', models.FloatField()),
            ],
            options={
                'verbose_name': 'AverageUserReturn',
                'verbose_name_plural': 'AverageUserReturns',
            },
        ),
        migrations.CreateModel(
            name='AverageUserSharpe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('age_group', models.PositiveSmallIntegerField()),
                ('mean', models.FloatField(null=True)),
                ('std', models.FloatField(null=True)),
            ],
            options={
                'verbose_name': 'AverageUserSharpe',
                'verbose_name_plural': 'AverageUserSharpes',
            },
        ),
        migrations.CreateModel(
            name='Benchmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225)),
                ('age_group', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Benchmark',
                'verbose_name_plural': 'Benchmarks',
            },
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secname', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('cusip', models.CharField(blank=True, max_length=9, null=True)),
                ('ticker', models.CharField(blank=True, max_length=5, null=True)),
                ('morning_star_id', models.CharField(blank=True, max_length=15, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('current_update_index', models.PositiveIntegerField(default=0)),
                ('sector', models.CharField(blank=True, default=b'', max_length=22, null=True)),
                ('category', models.CharField(choices=[(b'MUTF', b'Mutual Fund'), (b'CASH', b'Cash'), (b'STOC', b'Stock'), (b'FOFF', b'Fund of Funds'), (b'IGNO', b'Should Ignore'), (b'BOND', b'Bond')], default=b'IGNO', max_length=4)),
            ],
            options={
                'verbose_name': 'Holding',
                'verbose_name_plural': 'Holdings',
            },
        ),
        migrations.CreateModel(
            name='HoldingAssetBreakdown',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.CharField(max_length=50)),
                ('percentage', models.FloatField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_index', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'HoldingAssetBreakdown',
                'verbose_name_plural': 'HoldingAssetBreakdowns',
            },
        ),
        migrations.CreateModel(
            name='HoldingBondBreakdown',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=30)),
                ('percentage', models.FloatField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_index', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'HoldingBondBreakdown',
                'verbose_name_plural': 'HoldingBondBreakdowns',
            },
        ),
        migrations.CreateModel(
            name='HoldingDividends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('value', models.FloatField()),
            ],
            options={
                'verbose_name': 'HoldingDividend',
                'verbose_name_plural': 'HoldingDividends',
            },
        ),
        migrations.CreateModel(
            name='HoldingEquityBreakdown',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=30)),
                ('percentage', models.FloatField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_index', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'HoldingEquityBreakdown',
                'verbose_name_plural': 'HoldingEquityBreakdowns',
            },
        ),
        migrations.CreateModel(
            name='HoldingExpenseRatio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense', models.FloatField()),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'HoldingExpenseRatio',
                'verbose_name_plural': 'HoldingExpenseRatios',
            },
        ),
        migrations.CreateModel(
            name='HoldingJoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('composite_percent', models.FloatField()),
            ],
            options={
                'verbose_name': 'HoldingJoin',
                'verbose_name_plural': 'HoldingJoins',
            },
        ),
        migrations.CreateModel(
            name='HoldingPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('closing_date', models.DateField()),
            ],
            options={
                'verbose_name': 'HoldingPrice',
                'verbose_name_plural': 'HoldingPrices',
            },
        ),
        migrations.CreateModel(
            name='HoldingReturns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('year_to_date', models.FloatField()),
                ('one_year_return', models.FloatField()),
                ('two_year_return', models.FloatField()),
                ('three_year_return', models.FloatField()),
                ('one_month_return', models.FloatField()),
                ('three_month_return', models.FloatField()),
            ],
            options={
                'verbose_name': 'HoldingReturn',
                'verbose_name_plural': 'HoldingReturns',
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quovo_id', models.IntegerField(unique=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('is_taxable', models.BooleanField()),
                ('nickname', models.CharField(blank=True, max_length=100, null=True)),
                ('owner_type', models.CharField(blank=True, max_length=100, null=True)),
                ('portfolio_name', models.CharField(blank=True, max_length=100, null=True)),
                ('portfolio_type', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(default=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to='data.Account', to_field=b'quovo_id')),
                ('quovo_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_portfolios', to='dashboard.QuovoUser')),
            ],
            options={
                'verbose_name': 'Portfolio',
                'verbose_name_plural': 'Portfolios',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quovo_id', models.IntegerField(unique=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('fees', models.FloatField()),
                ('value', models.FloatField()),
                ('price', models.FloatField()),
                ('quantity', models.FloatField()),
                ('cusip', models.CharField(blank=True, max_length=30, null=True)),
                ('expense_category', models.CharField(blank=True, max_length=30, null=True)),
                ('ticker', models.CharField(blank=True, max_length=30, null=True)),
                ('ticker_name', models.CharField(blank=True, max_length=150, null=True)),
                ('tran_category', models.CharField(blank=True, max_length=50, null=True)),
                ('tran_type', models.CharField(blank=True, max_length=50, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_transaction', to='data.Account', to_field=b'quovo_id')),
                ('quovo_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_transaction', to='dashboard.QuovoUser')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='TreasuryBondValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('value', models.FloatField()),
            ],
            options={
                'verbose_name': 'TreasuryBondValue',
                'verbose_name_plural': 'TreasuryBondValues',
            },
        ),
        migrations.CreateModel(
            name='UserBondEquity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bond', models.FloatField()),
                ('equity', models.FloatField()),
                ('quovo_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_bond_equity', to='dashboard.QuovoUser')),
            ],
        ),
        migrations.CreateModel(
            name='UserCurrentHolding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('quantity', models.FloatField()),
                ('quovo_cusip', models.CharField(blank=True, max_length=20, null=True)),
                ('quovo_ticker', models.CharField(blank=True, max_length=20, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_current_holdings', to='data.Account', to_field=b'quovo_id')),
            ],
            options={
                'verbose_name': 'UserCurrentHolding',
                'verbose_name_plural': 'UserCurrentHoldings',
            },
        ),
        migrations.CreateModel(
            name='UserDisplayHolding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('quantity', models.FloatField()),
                ('quovo_cusip', models.CharField(blank=True, max_length=20, null=True)),
                ('quovo_ticker', models.CharField(blank=True, max_length=20, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_display_holdings', to='data.Account', to_field=b'quovo_id')),
            ],
            options={
                'verbose_name': 'UserDisplayHolding',
                'verbose_name_plural': 'UserDisplayHoldings',
            },
        ),
        migrations.CreateModel(
            name='UserFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(default=0)),
                ('change_index', models.IntegerField(default=1)),
                ('quovo_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='dashboard.QuovoUser')),
            ],
            options={
                'verbose_name': 'UserFee',
                'verbose_name_plural': 'UserFees',
            },
        ),
        migrations.CreateModel(
            name='UserHistoricalHolding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('quantity', models.FloatField()),
                ('archived_at', models.DateTimeField()),
                ('portfolio_index', models.PositiveIntegerField()),
                ('quovo_cusip', models.CharField(blank=True, max_length=20, null=True)),
                ('quovo_ticker', models.CharField(blank=True, max_length=20, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_historical_holdings', to='data.Account', to_field=b'quovo_id')),
            ],
            options={
                'verbose_name': 'UserHistoricalHolding',
                'verbose_name_plural': 'UserHistoricalHoldings',
            },
        ),
        migrations.CreateModel(
            name='UserSharpe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('value', models.FloatField()),
                ('quovo_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_sharpes', to='dashboard.QuovoUser')),
            ],
            options={
                'verbose_name': 'UserSharpe',
                'verbose_name_plural': 'UserSharpes',
            },
        ),
        migrations.CreateModel(
            name='BenchmarkComposite',
            fields=[
                ('holding_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, to='data.Holding')),
                ('benchmark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='composites', to='data.Benchmark')),
            ],
            options={
                'verbose_name': 'BenchmarkComposite',
                'verbose_name_plural': 'BenchmarkComposites',
            },
            bases=('data.holding',),
        ),
        migrations.AddField(
            model_name='userhistoricalholding',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='userhistoricalholding',
            name='portfolio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_historical_holdings', to='data.Portfolio', to_field=b'quovo_id'),
        ),
        migrations.AddField(
            model_name='userhistoricalholding',
            name='quovo_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_historical_holdings', to='dashboard.QuovoUser'),
        ),
        migrations.AddField(
            model_name='userdisplayholding',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='display_holding_child', to='data.Holding'),
        ),
        migrations.AddField(
            model_name='userdisplayholding',
            name='portfolio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_display_holdings', to='data.Portfolio', to_field=b'quovo_id'),
        ),
        migrations.AddField(
            model_name='userdisplayholding',
            name='quovo_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_display_holdings', to='dashboard.QuovoUser'),
        ),
        migrations.AddField(
            model_name='usercurrentholding',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_holding_child', to='data.Holding'),
        ),
        migrations.AddField(
            model_name='usercurrentholding',
            name='portfolio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_current_holdings', to='data.Portfolio', to_field=b'quovo_id'),
        ),
        migrations.AddField(
            model_name='usercurrentholding',
            name='quovo_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_current_holdings', to='dashboard.QuovoUser'),
        ),
        migrations.AddField(
            model_name='holdingreturns',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='returns', to='data.Holding'),
        ),
        migrations.AddField(
            model_name='holdingprice',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holding_prices', to='data.Holding'),
        ),
        migrations.AddField(
            model_name='holdingjoin',
            name='child_holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_joiner', to='data.Holding'),
        ),
        migrations.AddField(
            model_name='holdingjoin',
            name='parent_holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_joiner', to='data.Holding'),
        ),
        migrations.AddField(
            model_name='holdingexpenseratio',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_ratios', to='data.Holding'),
        ),
        migrations.AddField(
            model_name='holdingequitybreakdown',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equity_breakdown', to='data.Holding'),
        ),
        migrations.AddField(
            model_name='holdingdividends',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dividends', to='data.Holding'),
        ),
        migrations.AddField(
            model_name='holdingbondbreakdown',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bond_breakdown', to='data.Holding'),
        ),
        migrations.AddField(
            model_name='holdingassetbreakdown',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_breakdown', to='data.Holding'),
        ),
        migrations.AlterUniqueTogether(
            name='holdingprice',
            unique_together=set([('holding', 'closing_date')]),
        ),
    ]
